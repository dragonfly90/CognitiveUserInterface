(set-task "actr.tasks.ActrInterface.SIMCogACTR")


(add-dm
    (letter isa chunk)
    (startRead isa chunk)
    (attend isa chunk)
    (read isa chunk)
    (found isa chunk)
    (nextLabel isa chunk)
    (find-first isa chunk)
    (attend-first isa chunk)
    (find-next isa chunk)
    (attend-next isa chunk)
    (attend-next2 isa chunk)
    (attend-maxpoint isa chunk)
    (findColor isa chunk)
    (attendcolor isa chunk)
    (mygoal isa best-point state startRead labeldata "A" timestamp "05 PM" current "no")
    (locate-xaxis isa chunk)
    (attend-xaxis isa chunk)
    (read-xaxis isa chunk)
    (read-line isa chunk)
    (search-up-xaxis isa chunk)
    (search-down-xaxis isa chunk)
)

(p associate-color-with-label
    =goal>
        isa best-point
        state startRead
    ?visual>
        state free
==>
    +visual-location>
        isa visual-location
        > screen-x 500
        screen-x highest
        screen-y lowest
    =goal>
        state color-association
)

(p attend-label
    =goal>
        isa best-point
        state color-association
    =visual-location>
        isa visual-location
        screen-x     =screen-x
        screen-y     =screen-y
    ?visual>
        state free
==>
    +visual>
        isa move-attention
        screen-pos =visual-location
    =goal>
        state attend
        currentx =screen-x
        currenty =screen-y
)

(p read-label
    =goal>
        isa best-point
        state attend
    =visual>
        isa text
        value =letter
    ?imaginal>
        state free
==>
    =goal>
        state read
    +imaginal>
        isa array
        letter =letter
        !output!(=letter)
    -visual-location>
    -visual>
)

(p find-Exact-Label1
    =goal>
        isa best-point
        state read
        labeldata =clabeldata
    =imaginal>
        isa array
        letter =clabeldata
==>
    =goal>
        isa best-point
        state found
    -imaginal>
)

(p find-Exact-Label2
    =goal>
        isa best-point
        state read
        labeldata =clabeldata
    =imaginal>
        isa array
        - letter =clabeldata
==>
    =goal>
        isa best-point
        state nextLabel
    -imaginal>
)

(p find-Next-Label
    =goal>
        isa best-point
        state nextLabel
        currentx =currentx
        currenty =currenty
    ?visual>
        state free
==>
    +visual-location>
        isa visual-location
        screen-x =currentx    
        > screen-y =currenty
        screen-y lowest
    =goal>
        state color-association
)


(p find-Color
    =goal>
        isa best-point
        state found
        currentx =currentx
        currenty =currenty
    ?visual>
        state free
==>
    +visual-location>
        isa visual-location
        screen-y =currenty
        < screen-x =currentx    
        screen-x highest
    =goal>
        state findColor
)

(p attend-color
    =goal>
        isa best-point
        state findColor
    =visual-location>
        isa visual-location
    ?visual>
        state free
==>
    +visual>
        isa move-attention
        screen-pos =visual-location
    =goal>
        state attendcolor
)

(p read-color
    =goal>
        isa best-point
        state attendcolor
    =visual>
        isa rectangle
        color =currentcolor
    ?imaginal>
        state free
==>
    =goal>
        state find-first
        color =currentcolor
    -visual-location>
    -visual>
        !output!(=currentcolor)
)


(p locate-x-axis
    =goal>
        isa best-point
        state find-first
    ?visual>
        state free
==>
    +visual-location>
        isa visual-location
        > screen-y 365
        screen-x lowest
    =goal>
        state locate-xaxis
)

(p attend-x-axis
    =goal>
        isa best-point
        state locate-xaxis
    =visual-location>
        isa visual-location
        screen-x     =screen-x
        screen-y     =screen-y
    ?visual>
        state free
==>
    +visual>
        isa move-attention
        screen-pos =visual-location
    =goal>
        state attend-xaxis
        currentx =screen-x
        currenty =screen-y
        !output!(=screen-y)
)

(p read-x-axis
    =goal>
        isa best-point
        state attend-xaxis
    =visual>
        isa text
        value =currenttime 
==>
    =goal>
        state read-xaxis
        current =currenttime
    -visual-location>
    -visual>
        !output!(=currenttime)
)

(p justify-xaxis1
    =goal>
        isa best-point
        state read-xaxis
        timestamp =currenttime
        current =currenttime
==>
    =goal>
        state read-line
        !output!(=currenttime)
    -visual-location>
    -visual>
)

(p start-read-line
    =goal>
        isa best-point
        state search-up-xaxis
        currentx	=current-x
        currenty 	=current-y      
    ?visual>
        state free
==>
    +visual-location>
        isa visual-location
        > screen-y 365
        > screen-x =current-x
        screen-x lowest
    =goal>
        state locate-xaxis
        !output!(=current-y)
)
(p justify-xaxis2
    =goal>
        isa best-point
        state read-xaxis
        timestamp =currenttime
        - current =currenttime
==>
    =goal>
        state search-up-xaxis
        !output!(=currenttime)
    -visual-location>
    -visual>
)

(p justify-xaxis3
    =goal>
        isa best-point
        state read-xaxis
        timestamp =currenttime
        - current =currenttime
        current =currenttime
==>
    =goal>
        state search-down-xaxis
        !output!(=currenttime)
    -visual-location>
    -visual>
)

(p locate-down-xaxis
    =goal>
        isa best-point
        state search-down-xaxis
        currentx =screen-x
        currenty =screen-y    
    =visual-location>
        isa visual-location
        screen-y ＝screen-y
        < screen-x ＝screen-x
        screen-x highest
    ?visual>
        state free
==>
    +visual>
        isa move-attention
        screen-pos =visual-location
    =goal>
        state attend-xaxis
        currentx =screen-x
        currenty =screen-y
)

(p locate-up-xaxis
    =goal>
        isa best-point
        state search-up-xaxis
        currentx	=current-x
        currenty 	=current-y      
    ?visual>
        state free
==>
    +visual-location>
        isa visual-location
        > screen-y 365
        > screen-x =current-x
        screen-x lowest
    =goal>
        state locate-xaxis
        !output!(=current-y)
)



(goal-focus mygoal)